{"version":3,"sources":["componets/Icons.js","utils/helpers.js","componets/MegaMenu/MegaMenuTeam.js","componets/MegaMenu/MegaMenuDivision.js","componets/MegaMenu/CreateTeamsMegaMenu.js","componets/MegaMenu/LeagueDropdown.js","utils/useWindowDimensions.js","componets/Navbar/NavbarPrimary.js","componets/Navbar/NavbarSecondary.js","componets/Navbar/NavbarTeam.js","componets/Navbar/index.js","pages/SiteHome.js","stores/Global.js","stores/MLB.js","stores/NBA.js","stores/NFL.js","componets/Standings/StandingsTableHead.js","componets/Standings/DivisionComponent.js","componets/TableParts/TableTeamCell.js","componets/TableParts/TableWinsLossesCell.js","componets/Standings/SingleTeamComponent.js","componets/Standings/StandingsTable.js","pages/Shared/Standings.js","pages/Shared/Home.js","routes/MLB.js","routes/NBA.js","routes/NFL.js","routes/SportTeam.js","App.js","serviceWorker.js","index.js"],"names":["SiteLogo","React","createElement","xmlns","viewBox","d","handleErrors","response","ok","Error","statusText","espnLogo","teamAbrv","size","arguments","length","undefined","sport","teamName","concat","toLowerCase","sortTeamsByDivion","allTeams","Object","entries","reduce","teams","team","Conference","League","Division","teamsSortedByDivision","push","sort","isArrayEmpty","arrayArg","MegaMenuTeam","_ref","Name","City","Key","route","handleChange","Link","onClick","to","style","display","src","alt","className","MegaMenuDivision","DivisionName","NumberOfTeamsInRow","TeamsInDivision","key","propArg","a","b","map","TeamID","assign","CreateTeamsMegaMenu","cols","rows","element","index","TeamsInComponents","LeaugeName","LeagueDropdown","Title","NotMobile","closeMobileMenu","node","useRef","open","setOpen","useState","handleClickOutside","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","ref","onMouseEnter","onMouseLeave","NavLink","exact","getWindowDimensions","innerWidth","width","innerHeight","height","window","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","BuildSportsNav","SportsArg","name","NavbarPrimary","_ref2","sports","isHover","setIfHover","isItemActive","checkIfItemIsActive","mobileMenuOpen","setMobileMenuOpen","windowWidth","useLayoutEffect","buttons","Array","from","querySelectorAll","some","item","classList","type","defaultProps","NavbarSecondary","NavbarTeam","WikipediaLogoUrl","NavbarGlobal","match","LeaugeSportsTeam","params","pathParamSportTeam","find","SiteHome","Teams","Fragment","initialState","fetchTeams","Promise","all","fetch","process","then","value","json","data","MLB","NBA","NFL","reducer","state","action","_objectSpread","payload","StoreGlobal","createContext","ProviderGlobal","children","dispatch","useReducer","Provider","StandingsMLB","StoreMLB","ProviderMLB","StandingsNBA","StoreNBA","ProviderNBA","StandingsNFL","StoreNFL","ProviderNFL","StandingsTableHead","division","StandingsDivision","divisionTeams","margin","TableTeamCellWrap","styled","td","_templateObject","_taggedTemplateLiteral","TableTeamCell","TeamAbrv","hideCity","TeamCity","TeamName","city","abr","conf","div","TableWinsLossesCell","Wins","Losses","StandingsSingleTeam","GamesBehind","HomeWins","HomeLosses","AwayWins","AwayLosses","Team","Number","toFixed","replace","StandingsTable","teamStandings","standingsComponent","divisionComponent","divisionName","divisionTeamsComponents","Standings","Home","RoutesMLB","useContext","res","Route","path","url","render","RoutesNBA","RoutesNFL","RoutesSportTeam","props","id","App","myObject","keys","Router","Boolean","location","hostname","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yNAEO,MAgCMA,EAAWA,IAEpBC,IAAAC,cAAA,OAAKC,MAAM,6BAA6BC,QAAQ,cAC9CH,IAAAC,cAAA,QAAMG,EAAE,mkBCrCP,SAASC,EAAaC,GAC3B,IAAKA,EAASC,GACZ,MAAMC,MAAMF,EAASG,YAEvB,OAAOH,EAGF,MAAMI,EAAW,SAACC,GAAwC,IAA9BC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIG,EAAKH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MAChDI,EAAWN,EASf,MAPiB,QAAbA,IACFM,EAAW,QAGI,QAAbN,IACFM,EAAW,OAEP,qDAANC,OAA4DF,EAAMG,cAAa,SAAAD,OAAQD,EAASE,cAAa,WAAAD,OAAUN,EAAI,OAAAM,OAAMN,IAGtHQ,EAAoBC,GACxBC,OAAOC,QACZF,EAASG,OAAO,CAACC,EAAOC,KACtB,MAAM,WAAEC,EAAU,OAAEC,EAAM,SAAEC,GAAaH,EACnCI,EAAwBL,EAQ9B,OAPAK,EAAsB,GAADZ,OAAIU,GAAU,GAAE,KAAAV,OAAIS,GAAc,GAAE,KAAAT,OAAIW,IAC3DC,EAAsB,GAADZ,OAChBU,GAAU,GAAE,KAAAV,OAAIS,GAAc,GAAE,KAAAT,OAAIW,KACpC,GACPC,EAAsB,GAADZ,OAChBU,GAAU,GAAE,KAAAV,OAAIS,GAAc,GAAE,KAAAT,OAAIW,IACvCE,KAAKL,GACAI,GACN,KACHE,OAwOSC,EAAeC,IACtBA,IAAYA,EAASpB,OC/OZqB,MAvBMC,IAA+C,IAA9C,KAAEC,EAAI,KAAEC,EAAI,IAAEC,EAAG,MAAEC,EAAK,aAAEC,GAAcL,EAC5D,OACEpC,IAAAC,cAACyC,IAAI,CACHC,QAASA,IAAMF,IACfG,GAAE,IAAA1B,OAAMsB,EAAK,WAAAtB,OAAUqB,GACvBM,MAAO,CAAEC,QAAS,UAClB9C,IAAAC,cAAA,OAAK8C,IAAKrC,EAAS6B,EAAK,GAAIC,GAAQQ,IAAG,GAAA9B,OAAKmB,EAAI,KAAAnB,OAAIoB,EAAI,WACxDtC,IAAAC,cAAA,YACED,IAAAC,cAAA,QAAMgD,UAAU,aAAaX,EAAK,KACjCD,KC4BMa,MArCUd,IAMlB,IANmB,aACxBe,EAAY,aACZV,EAAY,mBACZW,EAAkB,MAClBZ,EAAK,gBACLa,GACDjB,EACC,OACEpC,IAAAC,cAAA,OACEgD,UAAS,sEAAA/B,OAAwEkC,GACjFE,IAAKH,GACLnD,IAAAC,cAAA,UAAKkD,GACLnD,IAAAC,cAAA,WACGoD,EAAgBrB,MFmQQuB,EEnQe,OFoQvC,CAACC,EAAGC,IACLD,EAAED,GAAWE,EAAEF,GACV,EAELE,EAAEF,GAAWC,EAAED,IACT,EAEH,IE3Q8CG,IAAIhC,IACnD,MAAM,OAAEiC,GAAWjC,EACnB,OACE1B,IAAAC,cAACkC,EAAYb,OAAAsC,OAAA,CACXN,IAAG,GAAApC,OAAKsB,EAAK,KAAAtB,OAAIyC,IACbjC,EAAI,CACRc,MAAOA,EACPC,aAAcA,SF4PKc,OG5OlBM,MAtCazB,IAKrB,IALsB,MAC3BX,EAAK,MACLe,EAAK,aACLC,EAAY,mBACZW,GACDhB,EACK0B,EAAO,GAEX,OAAOrC,EAAMD,OAAO,CAACuC,EAAMC,EAASC,KAClC,MAAOd,EAAce,GAAqBF,GAClCpC,OAAQuC,EAAU,WAAExC,GAAeuC,EAAkB,GAwB7D,OAtBAJ,EAAK/B,KACH/B,IAAAC,cAACiD,EAAgB,CACfI,IAAKH,EACLA,aAAcA,EACdV,aAAcA,EACdW,mBAAoBA,EACpBZ,MAAOA,EACPa,gBAAiBa,MAIhBD,EAAQ,GAAKb,IAAuB,IACvCW,EAAKhC,KACH/B,IAAAC,cAAA,OACEgD,UAAU,MACVK,IAAKa,GAAU,GAAAjD,OAAOS,EAAU,KAAAT,OAAIiC,IACnCW,IAGLA,EAAO,IAGFC,GACN,KCmGUK,MAnIQhC,IAMhB,IANiB,MACtBiC,EAAK,MACL5C,EAAK,MACLe,EAAK,UACL8B,EAAS,gBACTC,GACDnC,EACC,MAAMoC,EAAOC,oBACNC,EAAMC,GAAWC,oBAAS,GAC3BvD,EAAWD,EAAkBK,GAC7B2B,EAAqB/B,EAASP,OAAS,EAEvC+D,EAAqBC,IACrBN,EAAKO,QAAQC,SAASF,EAAEG,SAK5BN,GAAQ,IAGJlC,EAAeA,KACnBkC,GAAQ,GACRJ,KAYF,OATAW,oBAAU,KACJR,GACFS,SAASC,iBAAiB,YAAaP,GAElC,KACLM,SAASE,oBAAoB,YAAaR,KAE3C,CAACH,IAGF1E,IAAAC,cAAA,MACEqF,IAAKd,EACLe,aAAcA,IAAMjB,GAAaK,GAAQ,GACzCa,aAAcA,IAAMlB,GAAa7B,KACjCzC,IAAAC,cAACwF,IAAO,CACNxC,UAAS,2BAAA/B,OACPwD,EAAO,mCAAqC,IAE9C9B,GAAE,IAAA1B,OAAMsB,GACRG,QAASA,IAAMF,KACd4B,GAGFK,GACC1E,IAAAC,cAAA,OAAKgD,UAAU,mBACbjD,IAAAC,cAAA,MAAIgD,UAAU,wBACZjD,IAAAC,cAAA,UACED,IAAAC,cAACwF,IAAO,CAACC,OAAK,EAAC9C,GAAE,IAAA1B,OAAMsB,GAASG,QAASA,IAAMF,KAAgB,SAIjEzC,IAAAC,cAAA,UACED,IAAAC,cAACwF,IAAO,CACNC,OAAK,EACL9C,GAAE,IAAA1B,OAAMsB,EAAK,WACbG,QAASA,IAAMF,KAAgB,WAInCzC,IAAAC,cAAA,UACED,IAAAC,cAACwF,IAAO,CACNC,OAAK,EACL9C,GAAE,IAAA1B,OAAMsB,EAAK,aACbG,QAASA,IAAMF,KAAgB,aAInCzC,IAAAC,cAAA,UACED,IAAAC,cAACwF,IAAO,CACNC,OAAK,EACL9C,GAAE,IAAA1B,OAAMsB,EAAK,cACbG,QAASA,IAAMF,KAAgB,cAInCzC,IAAAC,cAAA,UACED,IAAAC,cAACwF,IAAO,CACNC,OAAK,EACL9C,GAAE,IAAA1B,OAAMsB,EAAK,UACbG,QAASA,IAAMF,KAAgB,UAInCzC,IAAAC,cAAA,UACED,IAAAC,cAACwF,IAAO,CACNC,OAAK,EACL9C,GAAE,IAAA1B,OAAMsB,EAAK,SACbG,QAASA,IAAMF,KAAgB,SAInCzC,IAAAC,cAAA,UACED,IAAAC,cAACwF,IAAO,CACNC,OAAK,EACL9C,GAAE,IAAA1B,OAAMsB,EAAK,UACbG,QAASA,IAAMF,KAAgB,WAMrCzC,IAAAC,cAAA,OACEgD,UAAS,kDAAA/B,OAAoDkC,IAC7DpD,IAAAC,cAAC4D,EAAmB,CAClBpC,MAAOJ,EACPL,MAAOwB,EACPA,MAAOA,EACPC,aAAcA,EACdW,mBAAoBA,QCtHlC,MAAMuC,EAAsBA,KAC1B,MAAQC,WAAYC,EAAOC,YAAaC,GAAWC,OACnD,MAAO,CACLH,QACAE,WAqBWE,MAjBaA,KAC1B,MAAOC,EAAkBC,GAAuBvB,mBAC9Ce,KAYF,OATAT,oBAAU,KACR,MAAMkB,EAAeA,KACnBD,EAAoBR,MAItB,OADAK,OAAOZ,iBAAiB,SAAUgB,GAC3B,IAAMJ,OAAOX,oBAAoB,SAAUe,IACjD,IAEIF,GCjBT,MAAMG,EAAiBjE,IAAgD,IAA/C,UAAEkE,EAAS,UAAEhC,EAAS,gBAAEC,GAAiBnC,EAC/D,OAAOd,OAAOC,QAAQ+E,GAAW5C,IAAI1C,IACnC,MAAOuF,EAAM9E,GAAST,EAEtB,OACEhB,IAAAC,cAACmE,EAAc,CACbC,MAAOkC,EACP9E,MAAOA,EACPe,MAAO+D,EACPjD,IAAKiD,EACLjC,UAAWA,EACXC,gBAAiBA,OAMnBiC,EAAgBC,IAAiB,IAAhB,OAAEC,GAAQD,EAC/B,MAAOE,EAASC,GAAchC,oBAAS,IAChCiC,EAAcC,GAAuBlC,oBAAS,IAC9CmC,EAAgBC,GAAqBpC,oBAAS,IAE7CiB,MAAOoB,GAAgBhB,IAM/BiB,0BAAgB,KACd,IAAIC,EACJ,MAAO,KACLA,EAAUC,MAAMC,KACdlC,SAASmC,iBAAiB,6BAC1BC,KAAKC,GAAQA,EAAKC,UAAUzC,SAAS,YACtC6B,GAAgBC,EAAoBK,MAIzC,MAAM7C,EAAY2C,GAAe,KAEjC,OACEjH,IAAAC,cAAA,WAASgD,UAAU,kBACjBjD,IAAAC,cAAA,OAAKgD,UAAU,wBACbjD,IAAAC,cAAA,UACEgD,UAAU,YACVyE,KAAK,SACL/E,QAASA,IAAMqE,GAAmBD,IAClC/G,IAAAC,cAAA,OAAKgD,UAAU,mBACbjD,IAAAC,cAAA,OACEgD,UAAS,wBAAA/B,OACP6F,EAAiB,UAAY,QAMrC/G,IAAAC,cAAA,UAAQgD,UAAU,wBAChBjD,IAAAC,cAACyC,IAAI,CAACE,GAAG,KACP5C,IAAAC,cAACF,EAAQ,QAIbC,IAAAC,cAAA,OACEgD,UAAS,8CAAA/B,OACP6F,IAAmBzC,EACf,mCACA,KAENtE,IAAAC,cAAA,MACEgD,UACE0D,GAAWE,GAAgBvC,EACvB,0BACA,GAENiB,aAAcA,IAAMsB,GAAgBvC,GAAasC,GAAW,GAC5DpB,aAAcA,IACZqB,GAAgBvC,GAAasC,GAAYD,IAG3C3G,IAAAC,cAAA,UACED,IAAAC,cAAA,YAAM,WAERD,IAAAC,cAACoG,EAAc,CACbC,UAAWI,EACXpC,UAAWA,EACXC,gBA7DYA,KACtByC,GAAkB,WA6EtBR,EAAcmB,aAAe,CAC3BjB,OAAQ,IAGKF,QCzEAoB,MApCSxF,IAAgB,IAAf,MAAEpB,GAAOoB,EAChC,OACEpC,IAAAC,cAAA,OAAKgD,UAAU,oBACbjD,IAAAC,cAAA,OAAKgD,UAAU,wBACbjD,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAIgD,UAAU,0BACZjD,IAAAC,cAACyC,IAAI,CAACE,GAAE,IAAA1B,OAAMF,IACZhB,IAAAC,cAAA,cACED,IAAAC,cAAA,OACE8C,IAAG,iEAAA7B,OAAmEF,EAAK,qCAC3EgC,IAAG,GAAA9B,OAAKF,EAAK,YAGjBhB,IAAAC,cAAA,kBAAae,KAGjBhB,IAAAC,cAAA,UACED,IAAAC,cAACwF,IAAO,CAACC,OAAK,EAAC9C,GAAE,IAAA1B,OAAMF,IAAS,SAIlChB,IAAAC,cAAA,UACED,IAAAC,cAACwF,IAAO,CAACC,OAAK,EAAC9C,GAAE,IAAA1B,OAAMF,EAAK,eAAc,kBCgCvC6G,MAtDIzF,IAAmD,IAAlD,KAAEE,EAAI,KAAED,EAAI,iBAAEyF,EAAgB,MAAE9G,EAAK,IAAEuB,GAAKH,EAC9D,OACEpC,IAAAC,cAAA,OAAKgD,UAAU,oBACbjD,IAAAC,cAAA,OAAKgD,UAAU,oBACbjD,IAAAC,cAAA,OAAKgD,UAAU,+BACbjD,IAAAC,cAAA,UAAQgD,UAAU,0BAChBjD,IAAAC,cAAA,OAAK8C,IAAK+E,EAAkB9E,IAAI,MAElChD,IAAAC,cAAA,cAAYgD,UAAU,6BACpBjD,IAAAC,cAAA,MAAIgD,UAAU,0BACZjD,IAAAC,cAAA,QAAMgD,UAAU,gCAAgCX,GAC/CD,GAEHrC,IAAAC,cAAA,OAAKgD,UAAU,6BACbjD,IAAAC,cAAA,UACEgD,UAAU,qCACVyE,KAAK,UAAS,UAGhB1H,IAAAC,cAAA,MAAIgD,UAAU,qCACZjD,IAAAC,cAAA,UAAI,OACJD,IAAAC,cAAA,UAAI,wBAOdD,IAAAC,cAAA,OAAKgD,UAAU,wBACbjD,IAAAC,cAAA,UACED,IAAAC,cAAA,UACED,IAAAC,cAACwF,IAAO,CAACC,OAAK,EAAC9C,GAAE,IAAA1B,OAAMF,EAAK,WAAAE,OAAUqB,IAAO,SAI/CvC,IAAAC,cAAA,UACED,IAAAC,cAACwF,IAAO,CAACC,OAAK,EAAC9C,GAAE,IAAA1B,OAAMF,EAAK,WAAAE,OAAUqB,EAAG,cAAa,iBCjClE,MAAMwF,EAAe3F,IAA+B,IAA9B,OAAEsE,EAAM,MAAE1F,EAAK,MAAEgH,GAAO5F,EAC5C,MAAM6F,EAAmBvB,EAAO1F,GAEhC,OACEhB,IAAAC,cAAA,UAAQgD,UAAU,iBAChBjD,IAAAC,cAACuG,EAAa,CAACE,OAAQA,IACtB1F,IAAUgH,EAAME,OAAOC,oBACtBnI,IAAAC,cAAC2H,EAAe,CAAC5G,MAAOA,IAEzBiH,GAAoBD,EAAME,OAAOC,oBAChCnI,IAAAC,cAAC4H,EAAUvG,OAAAsC,OAAA,CACT5C,MAAOA,GACHiH,EAAiBG,KACnB1G,GAAQA,EAAKa,MAAQyF,EAAME,OAAOC,wBAsB9CJ,EAAaJ,aAAe,CAC1BjB,OAAQ,GACR1F,MAAO,KACPgH,MAAO,MAGMD,QC3BAM,MAjBEjG,IAAgB,IAAf,MAAEkG,GAAOlG,EACzB,OACEpC,IAAAC,cAAAD,IAAAuI,SAAA,KACEvI,IAAAC,cAAC8H,EAAY,CAACrB,OAAQ4B,IACtBtI,IAAAC,cAAA,UAAI,e,OCJV,MAAMuI,EAAe,CACnBF,MAAO,IAGIG,EAAaC,QAAQC,IAChC,CAAC,MAAO,MAAO,OAAOjF,IAAI1C,GACjB4H,MAAM,GAAD1H,OAAI2H,cAAsB,UAAA3H,OAASF,EAAK,gBACjD8H,KAAKzI,GACLyI,KAAKC,GAASA,EAAMC,UAEzBF,KAAKG,IACL,MAAOC,EAAKC,EAAKC,GAAOH,EACxB,MAAO,CAAEC,MAAKC,MAAKC,SAGfC,EAAUA,CAACC,EAAOC,KACtB,OAAQA,EAAO7B,MACb,IAAK,cACH,OAAA8B,wBAAA,GAAYF,GAAK,IAAEhB,MAAOiB,EAAOE,UACnC,QACE,OAAOH,IAIAI,EAAcC,0BAEdC,EAAiBxH,IAAmB,IAAlB,SAAEyH,GAAUzH,EACzC,MAAOkH,EAAOQ,GAAYC,qBAAWV,EAASb,GACxCO,EAAQ,CAAEO,QAAOQ,YACvB,OAAO9J,IAAAC,cAACyJ,EAAYM,SAAQ,CAACjB,MAAOA,GAAQc,IC9BxCrB,EAAe,CACnByB,aAAc,GACdjJ,MAAO,OAGHqI,EAAUA,CAACC,EAAOC,KACtB,OAAQA,EAAO7B,MACb,IAAK,sBACH,OAAA8B,wBAAA,GAAYF,GAAK,IAAEW,aAAcV,EAAOE,UAC1C,QACE,OAAOH,IAIAY,EAAWP,0BAEXQ,EAAc/H,IAAmB,IAAlB,SAAEyH,GAAUzH,EACtC,MAAOkH,EAAOQ,GAAYC,qBAAWV,EAASb,GACxCO,EAAQ,CAAEO,QAAOQ,YACvB,OAAO9J,IAAAC,cAACiK,EAASF,SAAQ,CAACjB,MAAOA,GAAQc,ICnBrCrB,EAAe,CACnB4B,aAAc,GACdpJ,MAAO,OAGHqI,EAAUA,CAACC,EAAOC,KACtB,OAAQA,EAAO7B,MACb,IAAK,sBACH,OAAA8B,wBAAA,GAAYF,GAAK,IAAEc,aAAcb,EAAOE,UAC1C,QACE,OAAOH,IAIAe,EAAWV,0BAEXW,EAAclI,IAAmB,IAAlB,SAAEyH,GAAUzH,EACtC,MAAOkH,EAAOQ,GAAYC,qBAAWV,EAASb,GACxCO,EAAQ,CAAEO,QAAOQ,YACvB,OAAO9J,IAAAC,cAACoK,EAASL,SAAQ,CAACjB,MAAOA,GAAQc,ICnBrCrB,EAAe,CACnB+B,aAAc,GACdvJ,MAAO,OAGHqI,EAAUA,CAACC,EAAOC,KACtB,OAAQA,EAAO7B,MACb,IAAK,sBACH,OAAA8B,wBAAA,GAAYF,GAAK,IAAEiB,aAAchB,EAAOE,UAC1C,QACE,OAAOH,IAIAkB,EAAWb,0BAEXc,EAAcrI,IAAmB,IAAlB,SAAEyH,GAAUzH,EACtC,MAAOkH,EAAOQ,GAAYC,qBAAWV,EAASb,GACxCO,EAAQ,CAAEO,QAAOQ,YACvB,OAAO9J,IAAAC,cAACuK,EAASR,SAAQ,CAACjB,MAAOA,GAAQc,ICC5Ba,MApBYtI,IAAmB,IAAlB,SAAEuI,GAAUvI,EACtC,OACEpC,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAK0K,GACL3K,IAAAC,cAAA,UAAI,KACJD,IAAAC,cAAA,UAAI,KACJD,IAAAC,cAAA,UAAI,OACJD,IAAAC,cAAA,UAAI,MACJD,IAAAC,cAAA,MAAIgD,UAAU,uBAAsB,QACpCjD,IAAAC,cAAA,MAAIgD,UAAU,uBAAsB,WCO7B2H,I,EAAAA,EAhBWxI,IAAA,IAAC,SAAEuI,EAAQ,cAAEE,GAAezI,EAAA,OACpDpC,IAAAC,cAAA,SACEgD,UAAU,yBACVJ,MAAO,CACLiI,OAAQ,cAEV9K,IAAAC,cAACyK,EAAkB,CAACC,SAAUA,IAC9B3K,IAAAC,cAAA,aAAQ4K,K,QCLZ,MAAME,E,MAAoBC,EAAOC,GAAEC,MAAAC,YAAA,upBA8C7BC,EAAgBhJ,IAAqD,IAAlDG,IAAK8I,EAAQ,KAAE/I,EAAI,KAAED,EAAI,SAAEiJ,EAAQ,MAAEtK,GAAOoB,EAC/DmJ,EAAWjJ,EACXkJ,EAAWnJ,EAEf,GAAc,QAAVrB,EAAiB,CACnB,MAAM,KAAEuF,EAAI,KAAEkF,IjBpBa9H,EiBoBY0H,EjBnBlC,CACL,CACEI,KAAM,UACNlF,KAAM,YACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,QAEP,CACEH,KAAM,UACNlF,KAAM,UACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,SAEP,CACEH,KAAM,YACNlF,KAAM,SACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,SAEP,CACEH,KAAM,UACNlF,KAAM,QACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,QAEP,CACEH,KAAM,WACNlF,KAAM,WACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,SAEP,CACEH,KAAM,YACNlF,KAAM,UACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,SAEP,CACEH,KAAM,UACNlF,KAAM,QACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,SAEP,CACEH,KAAM,YACNlF,KAAM,SACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,SAEP,CACEH,KAAM,SACNlF,KAAM,UACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,QAEP,CACEH,KAAM,SACNlF,KAAM,UACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,QAEP,CACEH,KAAM,UACNlF,KAAM,QACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,SAEP,CACEH,KAAM,YACNlF,KAAM,UACNmF,IAAK,KACLC,KAAM,MACNC,IAAK,SAEP,CACEH,KAAM,UACNlF,KAAM,SACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,SAEP,CACEH,KAAM,eACNlF,KAAM,QACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,SAEP,CACEH,KAAM,eACNlF,KAAM,UACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,SAEP,CACEH,KAAM,cACNlF,KAAM,UACNmF,IAAK,KACLC,KAAM,MACNC,IAAK,QAEP,CACEH,KAAM,QACNlF,KAAM,WACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,QAEP,CACEH,KAAM,YACNlF,KAAM,UACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,SAEP,CACEH,KAAM,cACNlF,KAAM,WACNmF,IAAK,KACLC,KAAM,MACNC,IAAK,QAEP,CACEH,KAAM,cACNlF,KAAM,SACNmF,IAAK,KACLC,KAAM,MACNC,IAAK,SAEP,CACEH,KAAM,WACNlF,KAAM,SACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,QAEP,CACEH,KAAM,WACNlF,KAAM,OACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,QAEP,CACEH,KAAM,UACNlF,KAAM,UACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,QAEP,CACEH,KAAM,eACNlF,KAAM,SACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,QAEP,CACEH,KAAM,aACNlF,KAAM,WACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,SAEP,CACEH,KAAM,cACNlF,KAAM,WACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,QAEP,CACEH,KAAM,UACNlF,KAAM,WACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,QAEP,CACEH,KAAM,gBACNlF,KAAM,QACNmF,IAAK,KACLC,KAAM,MACNC,IAAK,QAEP,CACEH,KAAM,cACNlF,KAAM,OACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,QAEP,CACEH,KAAM,YACNlF,KAAM,aACNmF,IAAK,KACLC,KAAM,MACNC,IAAK,SAEP,CACEH,KAAM,YACNlF,KAAM,UACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,SAEP,CACEH,KAAM,aACNlF,KAAM,WACNmF,IAAK,MACLC,KAAM,MACNC,IAAK,SAEPxD,KAAK1G,GAAQA,EAAKgK,MAAQ/H,IiB7M1B4H,EAAWE,EACXD,EAAWjF,EjBtBgB5C,MiByB7B,OACE3D,IAAAC,cAAC8K,EAAiB,CAAC9H,UAAU,mBAC3BjD,IAAAC,cAACyC,IAAI,CAACE,GAAE,UAAA1B,OAAYmK,IAClBrL,IAAAC,cAAA,OACE8C,IAAKrC,EAAS,GAADQ,OAAImK,GAAY,GAAIrK,GACjCgC,IAAG,GAAA9B,OAAKqK,EAAQ,KAAArK,OAAIsK,EAAQ,WAE7BH,GAAYrL,IAAAC,cAAA,QAAMgD,UAAU,yBAAyBoI,GACrDE,IAAaD,GACZtL,IAAAC,cAAA,cAAYgD,UAAU,yBAAyBsI,EAAS,KAEzDC,GACCxL,IAAAC,cAAA,cAAYgD,UAAU,yBAAyBuI,MAezDJ,EAAczD,aAAe,CAC3BrF,KAAM,KACND,KAAM,KACNiJ,UAAU,EACVtK,MAAO,OAGMoK,QC7Ff,MAAMS,EAAsBzJ,IAAuB,IAAtB,KAAE0J,EAAI,OAAEC,GAAQ3J,EAC3C,OAAOpC,IAAAC,cAAA,MAAIgD,UAAU,uBAAqB,GAAA/B,OAAK4K,EAAI,OAAA5K,OAAM6K,KAQ3DF,EAAoBlE,aAAe,CACjCmE,KAAM,EACNC,OAAQ,GAGKF,QCbf,MAAMG,GAAsB5J,IAcrB,IAdsB,KAC3BE,EAAI,KACJwJ,EAAI,OACJC,EAAM,YACNE,EAAW,SACXC,EAAQ,WACRC,EAAU,SACVC,EAAQ,WACRC,EAAU,OACV1I,EAAM,KACNtB,EAAI,IACJE,EAAG,KACH+J,EAAI,MACJtL,GACDoB,EACC,OACEpC,IAAAC,cAAA,MAAIqD,IAAKK,GACP3D,IAAAC,cAACmL,EAAa,CAAC7I,IAAKA,GAAO+J,EAAMhK,KAAMA,EAAMD,KAAMA,EAAMrB,MAAOA,IAChEhB,IAAAC,cAAA,UAAK6L,GACL9L,IAAAC,cAAA,UAAK8L,GACL/L,IAAAC,cAAA,WACIsM,OAAO,GAADrL,OAAI4K,KAAWS,OAAO,GAADrL,OAAI4K,IAAUS,OAAO,GAADrL,OAAI6K,MAClDS,QAAQ,GACRC,QAAQ,MAAO,KAEpBzM,IAAAC,cAAA,UAAKgM,GAAe,KACpBjM,IAAAC,cAAC4L,EAAmB,CAACC,KAAMI,EAAUH,OAAQI,IAC7CnM,IAAAC,cAAC4L,EAAmB,CAACC,KAAMM,EAAUL,OAAQM,MAqBnDL,GAAoBrE,aAAe,CACjC0E,WAAY,KACZD,SAAU,KACV9J,KAAM,KACN2J,YAAa,KACbE,WAAY,KACZD,SAAU,KACV3J,IAAK,KACLwJ,OAAQ,KACR1J,KAAM,KACNrB,MAAO,MACPsL,KAAM,KACN3I,OAAQ,KACRmI,KAAM,MAGOE,UCtCAU,OAzBQtK,IAA+B,IAA9B,cAAEuK,EAAa,MAAE3L,GAAOoB,EAC9C,OAAOhB,EAAkBuL,GAAenL,OACtC,CAACoL,EAAoBC,KACnB,MAAOC,EAAcC,GAA2BF,EAchD,OAbAD,EAAmB7K,KACjB/B,IAAAC,cAAC2K,EAAiB,CAChB3H,UAAU,QACVK,IAAKwJ,EACLnC,SAAUmC,EACVjC,cAAekC,EAAwBrJ,IAAIhC,IACzC,MAAM,IAAEa,EAAG,KAAE+J,GAAS5K,EACtB,OACE1B,IAAAC,cAAC+L,GAAmB1K,OAAAsC,OAAA,CAACN,IAAKf,GAAO+J,GAAU5K,EAAI,CAAEV,MAAOA,UAKzD4L,GAET,KCZWI,OATG5K,IAA+B,IAA9B,cAAEuK,EAAa,MAAE3L,GAAOoB,EACzC,OACEpC,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAKe,EAAM,cACXhB,IAAAC,cAACyM,GAAc,CAAOC,gBAAe3L,YCJ3C,MAAMiM,GAAO7K,IAAgB,IAAf,MAAEpB,GAAOoB,EACrB,OACEpC,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAKe,GAASA,EAAM,WAS1BiM,GAAKtF,aAAe,CAClB3G,MAAO,MAGMiM,UC4BAC,OAvCG9K,IAAuB,IAAtB,MAAE4F,EAAK,MAAEhH,GAAOoB,EACjC,MAAM,MAAEkH,EAAK,SAAEQ,GAAaqD,qBAAWjD,GAiBvC,OAJAhF,oBAAU,KACRjD,EAAaqH,EAAM,YAADpI,OAAaF,MAX/B4H,MAAM,GAAD1H,OAAI2H,cAAsB,UAAA3H,OAASF,EAAK,yBAC1C8H,KAAKsE,GAAOA,EAAIpE,QAChBF,KAAKG,GACJa,EAAS,CACPpC,KAAK,SAADxG,OAAWF,EAAK,cACpByI,QAASR,OAUfjJ,IAAAC,cAAAD,IAAAuI,SAAA,KACEvI,IAAAC,cAACoN,IAAK,CAACC,KAAMtF,EAAMuF,IAAK7H,OAAK,EAAC8H,OAAQA,IAAMxN,IAAAC,cAACgN,GAAS3D,KACtDtJ,IAAAC,cAACoN,IAAK,CACJC,KAAI,GAAApM,OAAK8G,EAAMuF,IAAG,cAClB7H,OAAK,EACL8H,OAAQA,IACNxN,IAAAC,cAAC+M,GAAS1L,OAAAsC,OAAA,CAAC+I,cAAerD,EAAM,YAADpI,OAAaF,KAAcsI,QCcrDmE,OAvCGrL,IAAuB,IAAtB,MAAE4F,EAAK,MAAEhH,GAAOoB,EACjC,MAAM,MAAEkH,EAAK,SAAEQ,GAAaqD,qBAAW9C,GAiBvC,OAJAnF,oBAAU,KACRjD,EAAaqH,EAAM,YAADpI,OAAaF,MAX/B4H,MAAM,GAAD1H,OAAI2H,cAAsB,UAAA3H,OAASF,EAAK,yBAC1C8H,KAAKsE,GAAOA,EAAIpE,QAChBF,KAAKG,GACJa,EAAS,CACPpC,KAAK,SAADxG,OAAWF,EAAK,cACpByI,QAASR,OAUfjJ,IAAAC,cAAAD,IAAAuI,SAAA,KACEvI,IAAAC,cAACoN,IAAK,CAACC,KAAMtF,EAAMuF,IAAK7H,OAAK,EAAC8H,OAAQA,IAAMxN,IAAAC,cAACgN,GAAS3D,KACtDtJ,IAAAC,cAACoN,IAAK,CACJC,KAAI,GAAApM,OAAK8G,EAAMuF,IAAG,cAClB7H,OAAK,EACL8H,OAAQA,IACNxN,IAAAC,cAAC+M,GAAS1L,OAAAsC,OAAA,CAAC+I,cAAerD,EAAM,YAADpI,OAAaF,KAAcsI,QCcrDoE,OAvCGtL,IAAuB,IAAtB,MAAE4F,EAAK,MAAEhH,GAAOoB,EACjC,MAAM,MAAEkH,EAAK,SAAEQ,GAAaqD,qBAAW3C,GAiBvC,OAJAtF,oBAAU,KACRjD,EAAaqH,EAAM,YAADpI,OAAaF,MAX/B4H,MAAM,GAAD1H,OAAI2H,cAAsB,UAAA3H,OAASF,EAAK,yBAC1C8H,KAAKsE,GAAOA,EAAIpE,QAChBF,KAAKG,GACJa,EAAS,CACPpC,KAAK,SAADxG,OAAWF,EAAK,cACpByI,QAASR,OAUfjJ,IAAAC,cAAAD,IAAAuI,SAAA,KACEvI,IAAAC,cAACoN,IAAK,CAACC,KAAMtF,EAAMuF,IAAK7H,OAAK,EAAC8H,OAAQA,IAAMxN,IAAAC,cAACgN,GAAS3D,KACtDtJ,IAAAC,cAACoN,IAAK,CACJC,KAAI,GAAApM,OAAK8G,EAAMuF,IAAG,cAClB7H,OAAK,EACL8H,OAAQA,IACNxN,IAAAC,cAAC+M,GAAS1L,OAAAsC,OAAA,CAAC+I,cAAerD,EAAM,YAADpI,OAAaF,KAAcsI,QCYrDqE,OAxCSvL,IAAgB,IAAf,MAAEkG,GAAOlG,EAChC,OACEpC,IAAAC,cAACoN,IAAK,CACJC,KAAK,iCACLE,OAAQI,IAEN,MAAM,MAAE5F,GAAU4F,GACZ,GAAEC,EAAE,mBAAE1F,GAAuBH,EAAME,OACzC,OACElI,IAAAC,cAAAD,IAAAuI,SAAA,KACEvI,IAAAC,cAAC8H,EAAYzG,OAAAsC,OAAA,CAAC8C,OAAQ4B,EAAOtH,MAAO6M,GAAQD,IAC5C5N,IAAAC,cAACoN,IAAK,CACJ3H,OAAK,EACL4H,KAAK,iCACLE,OAAQA,IACNxN,IAAAC,cAAA,MAAIyB,KAAMyG,GAAoB,4BAGlCnI,IAAAC,cAACoN,IAAK,CACJ3H,OAAK,EACL4H,KAAK,0CACLE,OAAQA,IACNxN,IAAAC,cAAA,MAAIyB,KAAMyG,GAAoB,+BC2D/B2F,OAtEHA,KACV,MAAM,MAAExE,EAAK,SAAEQ,GAAaqD,qBAAWzD,GAWvCxE,oBAAU,K3BqPiB6I,Q2BpPXzE,EAAMhB,O3BqPdhH,OAAO0M,KAAKD,GAAUjN,Q2B9PrB2H,EAAWK,KAAKG,GACrBa,EAAS,CACPpC,KAAM,cACN+B,QAASR,OASf,MAAM,IAAEC,EAAG,IAAEC,EAAG,IAAEC,GAAQE,EAAMhB,MAEhC,OACEtI,IAAAC,cAACgO,IAAM,KACLjO,IAAAC,cAAAD,IAAAuI,SAAA,KACEvI,IAAAC,cAACoN,IAAK,CAACC,KAAK,IAAI5H,OAAK,EAAC8H,OAAQA,IAAMxN,IAAAC,cAACoI,EAAaiB,KAElDtJ,IAAAC,cAACoN,IAAK,CACJ3H,OAAK,EACL4H,KAAK,oBACLE,OAAQI,IAEN,MAAM,MAAE5F,GAAU4F,GACZ,GAAEC,GAAO7F,EAAME,OACrB,OAAOlI,IAAAC,cAAC8H,EAAYzG,OAAAsC,OAAA,CAAC8C,OAAQ4C,EAAMhB,MAAOtH,MAAO6M,GAAQD,OAK7D5N,IAAAC,cAAC0N,GAAe,CAACrF,MAAOgB,EAAMhB,QAE9BtI,IAAAC,cAACoN,IAAK,CACJC,KAAK,OACLE,OAAQI,GAEJ5N,IAAAC,cAACkK,EAAW,KACVnK,IAAAC,cAACiN,GAAS5L,OAAAsC,OAAA,GAAKgK,EAAK,CAAE5M,MAAM,MAAMS,MAAOyH,QAMjDlJ,IAAAC,cAACoN,IAAK,CACJC,KAAK,OACLE,OAAQI,GACN5N,IAAAC,cAACqK,EAAW,KACVtK,IAAAC,cAACwN,GAASnM,OAAAsC,OAAA,GAAKgK,EAAK,CAAE5M,MAAM,MAAMS,MAAO0H,QAK/CnJ,IAAAC,cAACoN,IAAK,CACJC,KAAK,OACLE,OAAQI,GACN5N,IAAAC,cAACwK,EAAW,KACVzK,IAAAC,cAACyN,GAASpM,OAAAsC,OAAA,GAAKgK,EAAK,CAAE5M,MAAM,MAAMS,MAAO2H,W,YCjEnC8E,QACW,cAA7BlI,OAAOmI,SAASC,UAEe,UAA7BpI,OAAOmI,SAASC,UAEhBpI,OAAOmI,SAASC,SAASpG,MACvB,2DCVNwF,iBACExN,IAAAC,cAAC2J,EAAc,KACb5J,IAAAC,cAAC6N,GAAG,OAEN3I,SAASkJ,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1F,KAAK2F,IACjCA,EAAaC,iB","file":"static/js/main.85224a1c.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const IconTwitter = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\">\n      <path className=\"fill--bg\" d=\"M32 0A32 32 0 1 1 0 32 32 32 0 0 1 32 0z\" />\n      <path\n        className=\"fill--text\"\n        d=\"M52 21.56a16 16 0 0 1-4.48 1.19A7.68 7.68 0 0 0 51 18.56a15.9 15.9 0 0 1-5 1.84 7.9 7.9 0 0 0-5.69-2.4 7.69 7.69 0 0 0-7.8 7.57 7 7 0 0 0 .21 1.72 22.4 22.4 0 0 1-16.08-7.9 7.32 7.32 0 0 0-1.05 3.8 7.5 7.5 0 0 0 3.47 6.3 8 8 0 0 1-3.54-.95v.1a7.64 7.64 0 0 0 6.26 7.42 8.19 8.19 0 0 1-2.06.26 7.77 7.77 0 0 1-1.46-.13 7.76 7.76 0 0 0 7.28 5.25 15.88 15.88 0 0 1-9.68 3.24 16.31 16.31 0 0 1-1.86-.1A22.53 22.53 0 0 0 26 48a21.7 21.7 0 0 0 22.14-21.55v-1A15.54 15.54 0 0 0 52 21.56z\"\n      />\n    </svg>\n  );\n};\n\nexport const IconInstagram = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\">\n      <path className=\"fill--bg\" d=\"M32 0A32 32 0 1 1 0 32 32 32 0 0 1 32 0z\" />\n      <path\n        className=\"fill--text\"\n        d=\"M43 14H21a7 7 0 0 0-7 7v22.1a7 7 0 0 0 7 7h22.1a7 7 0 0 0 7-7V21a7 7 0 0 0-7.1-7zm2.2 4h.8v6h-6v-6zM32 26c5 0 6 4.68 6 6a6 6 0 0 1-12 0c0-1.34 1-6 6-6zm14.06 16.61a3.46 3.46 0 0 1-3.45 3.45H21.33a3.46 3.46 0 0 1-3.46-3.45V28h5a11.55 11.55 0 0 0-.72 4 9.85 9.85 0 1 0 19.69 0 11.33 11.33 0 0 0-.73-4h4.94v14.61z\"\n      />\n    </svg>\n  );\n};\n\nexport const IconCaret = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 60\">\n      <path d=\"M1.5 12.61l44.88 45.86a5 5 0 0 0 7.24 0L98.5 12.61a5.3 5.3 0 0 0 0-7.39l-3.61-3.69a5 5 0 0 0-7.24 0L50 40 12.34 1.53a5 5 0 0 0-7.23 0L1.5 5.22a5.3 5.3 0 0 0 0 7.39z\" />\n    </svg>\n  );\n};\n\nexport const SiteLogo = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 162 40\">\n      <path d=\"M52.83 0c-6 0-10 3.17-10.6 7.93-.13 1.1-.26 2.2-.4 3.3h78.52s.14-1.16.26-2.09c.59-4.79-1.45-9.14-8.85-9.14H52.83zM4.91 0L3.53 11.23h35.61L40.51 0zm119.53 0l-1.38 11.23h38.6s.05-.41.22-1.73c.94-7.37-3.81-9.5-8.4-9.5zm-1.91 15.5l-3 24.5h13.32l3-24.49zm25.3 0l-3 24.5h13.31l3-24.49zM3 15.5L0 40h35.6l1.32-10.63h-22.3l.57-4.58h22.28l1.14-9.29zm38.3 0c-1 6.4 2.22 9.29 6.76 9.29h18l-.56 4.59H39.61L38.3 40h29.35c.95-.07 7.55-.25 9.79-5.65.73-1.75 1.38-8 1.56-9.35 1-7.66-4.27-9.49-8.45-9.49zm41.45 0l-3 24.5h13.31l1.87-15.21h16.72c4.74 0 7.29-2.55 7.77-6 .15-1.1.28-2.2.41-3.31z\" />\n    </svg>\n  );\n};\n\nexport const ChevronRight = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 40\">\n      <path d=\"M0 37.92L2.08 40 22 20 2.08 0 0 2.08 17.84 20 0 37.92z\" />\n    </svg>\n  );\n};\n\nexport const ChevronLeft = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 40\">\n      <path d=\"M22 2.08L19.92 0 0 20l19.92 20L22 37.92 4.16 20 22 2.08z\" />\n    </svg>\n  );\n};\n\nexport const TicketStubs = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 21\">\n      <path d=\"M23.6 13.87a.4.4 0 0 0 .4-.4V10.3a.39.39 0 0 0-.4-.39h-5l2.51-2.5a.39.39 0 0 0 0-.56L18.9 4.69a.4.4 0 0 0-.57 0 1.61 1.61 0 0 1-2.26 0 1.56 1.56 0 0 1 0-2.24.42.42 0 0 0 0-.57L14.28.12a.39.39 0 0 0-.56 0L3.83 9.91H.4a.39.39 0 0 0-.4.39v3.17a.4.4 0 0 0 .4.4A1.59 1.59 0 1 1 .4 17a.4.4 0 0 0-.4.39v3.21a.4.4 0 0 0 .4.4h23.2a.4.4 0 0 0 .4-.4v-3.17a.4.4 0 0 0-.4-.39 1.59 1.59 0 1 1 0-3.17zM14 1l1.24 1.23a2.35 2.35 0 0 0 .56 3.27 2.42 2.42 0 0 0 2.79 0l1.64 1.63-2.8 2.78h-1.26l.91-.91a.39.39 0 0 0 0-.56l-4.4-4.36a.39.39 0 0 0-.56 0L6.23 9.91H5zm1 9H7.37l5-5 3.83 3.8zm6.2 5.94a2.39 2.39 0 0 0 2 2v2.41H20v-1.73h-.8v1.59H4.8v-.4H4v.4H.8V17.8a2.37 2.37 0 0 0 0-4.69V10.7H4v1.19h.8V10.7h18.4v2.41a2.38 2.38 0 0 0-1.97 2.74z\" />\n      <path d=\"M19.2 11.49h.8v1.58h-.8zM19.2 13.87h.8v1.58h-.8zM19.2 16.25h.8v1.58h-.8zM4 12.68h.8v1.58H4zM4 15.06h.8v1.58H4zM4 17.43h.8v1.58H4zM17.6 12.68a.8.8 0 0 1-.8-.79.4.4 0 0 0-.4-.4H7.6a.4.4 0 0 0-.4.4.8.8 0 0 1-.8.79.4.4 0 0 0-.4.4v4.75a.4.4 0 0 0 .4.4.79.79 0 0 1 .8.79.4.4 0 0 0 .4.4h8.8a.4.4 0 0 0 .4-.4.79.79 0 0 1 .8-.79.4.4 0 0 0 .4-.4v-4.75a.4.4 0 0 0-.4-.4zm-.4 4.8a1.62 1.62 0 0 0-1.15 1.14H8a1.62 1.62 0 0 0-1.2-1.14v-4.06A1.6 1.6 0 0 0 8 12.28h8.1a1.6 1.6 0 0 0 1.15 1.14z\" />\n    </svg>\n  );\n};\n","export function handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\nexport const espnLogo = (teamAbrv, size = 24, sport = \"mlb\") => {\n  let teamName = teamAbrv;\n\n  if (teamAbrv === \"UTA\") {\n    teamName = \"UTAH\";\n  }\n\n  if (teamAbrv === \"CWS\") {\n    teamName = \"CHW\";\n  }\n  return `https://a.espncdn.com/combiner/i?img=/i/teamlogos/${sport.toLowerCase()}/500/${teamName.toLowerCase()}.png&h=${size}&w=${size}`;\n};\n\nexport const sortTeamsByDivion = allTeams => {\n  return Object.entries(\n    allTeams.reduce((teams, team) => {\n      const { Conference, League, Division } = team;\n      const teamsSortedByDivision = teams;\n      teamsSortedByDivision[`${League || \"\"} ${Conference || \"\"} ${Division}`] =\n        teamsSortedByDivision[\n          `${League || \"\"} ${Conference || \"\"} ${Division}`\n        ] || [];\n      teamsSortedByDivision[\n        `${League || \"\"} ${Conference || \"\"} ${Division}`\n      ].push(team);\n      return teamsSortedByDivision;\n    }, {})\n  ).sort();\n};\n\nexport const NflTeamDecoders = TeamID => {\n  return [\n    {\n      city: \"Arizona\",\n      name: \"Cardinals\",\n      abr: \"ARI\",\n      conf: \"NFC\",\n      div: \"West\",\n    },\n    {\n      city: \"Atlanta\",\n      name: \"Falcons\",\n      abr: \"ATL\",\n      conf: \"NFC\",\n      div: \"South\",\n    },\n    {\n      city: \"Baltimore\",\n      name: \"Ravens\",\n      abr: \"BAL\",\n      conf: \"AFC\",\n      div: \"North\",\n    },\n    {\n      city: \"Buffalo\",\n      name: \"Bills\",\n      abr: \"BUF\",\n      conf: \"AFC\",\n      div: \"EAST\",\n    },\n    {\n      city: \"Carolina\",\n      name: \"Panthers\",\n      abr: \"CAR\",\n      conf: \"NFC\",\n      div: \"South\",\n    },\n    {\n      city: \"Cincinati\",\n      name: \"Bengals\",\n      abr: \"CIN\",\n      conf: \"AFC\",\n      div: \"North\",\n    },\n    {\n      city: \"Chicago\",\n      name: \"Bears\",\n      abr: \"CHI\",\n      conf: \"NFC\",\n      div: \"North\",\n    },\n    {\n      city: \"Cleveland\",\n      name: \"Browns\",\n      abr: \"CLE\",\n      conf: \"AFC\",\n      div: \"North\",\n    },\n    {\n      city: \"Dallas\",\n      name: \"Cowboys\",\n      abr: \"DAL\",\n      conf: \"NFC\",\n      div: \"East\",\n    },\n    {\n      city: \"Denver\",\n      name: \"Broncos\",\n      abr: \"DEN\",\n      conf: \"AFC\",\n      div: \"West\",\n    },\n    {\n      city: \"Detroit\",\n      name: \"Lions\",\n      abr: \"DET\",\n      conf: \"NFC\",\n      div: \"North\",\n    },\n    {\n      city: \"Green Bay\",\n      name: \"Packers\",\n      abr: \"GB\",\n      conf: \"NFC\",\n      div: \"North\",\n    },\n    {\n      city: \"Houston\",\n      name: \"Texans\",\n      abr: \"HOU\",\n      conf: \"AFC\",\n      div: \"South\",\n    },\n    {\n      city: \"Indianapolis\",\n      name: \"Colts\",\n      abr: \"IND\",\n      conf: \"AFC\",\n      div: \"South\",\n    },\n    {\n      city: \"Jacksonville\",\n      name: \"Jaquars\",\n      abr: \"JAX\",\n      conf: \"AFC\",\n      div: \"South\",\n    },\n    {\n      city: \"Kansas City\",\n      name: \"Chiefts\",\n      abr: \"KC\",\n      conf: \"AFC\",\n      div: \"West\",\n    },\n    {\n      city: \"Miami\",\n      name: \"Dolphins\",\n      abr: \"MIA\",\n      conf: \"AFC\",\n      div: \"East\",\n    },\n    {\n      city: \"Minnesota\",\n      name: \"Vikings\",\n      abr: \"MIN\",\n      conf: \"AFC\",\n      div: \"North\",\n    },\n    {\n      city: \"New England\",\n      name: \"Patriots\",\n      abr: \"NE\",\n      conf: \"AFC\",\n      div: \"East\",\n    },\n    {\n      city: \"New Orleans\",\n      name: \"Saints\",\n      abr: \"NO\",\n      conf: \"NFC\",\n      div: \"South\",\n    },\n    {\n      city: \"New York\",\n      name: \"Giants\",\n      abr: \"NYG\",\n      conf: \"NFC\",\n      div: \"East\",\n    },\n    {\n      city: \"New York\",\n      name: \"Jets\",\n      abr: \"NYJ\",\n      conf: \"AFC\",\n      div: \"East\",\n    },\n    {\n      city: \"Oakland\",\n      name: \"Raiders\",\n      abr: \"OAK\",\n      conf: \"AFC\",\n      div: \"West\",\n    },\n    {\n      city: \"Philidelphia\",\n      name: \"Eagles\",\n      abr: \"PHI\",\n      conf: \"NFC\",\n      div: \"East\",\n    },\n    {\n      city: \"Pittsburgh\",\n      name: \"Steelers\",\n      abr: \"PIT\",\n      conf: \"AFC\",\n      div: \"North\",\n    },\n    {\n      city: \"Los Angeles\",\n      name: \"Chargers\",\n      abr: \"LAC\",\n      conf: \"AFC\",\n      div: \"West\",\n    },\n    {\n      city: \"Seattle\",\n      name: \"Seahawks\",\n      abr: \"SEA\",\n      conf: \"NFC\",\n      div: \"West\",\n    },\n    {\n      city: \"San Francisco\",\n      name: \"49ers\",\n      abr: \"SF\",\n      conf: \"NFC\",\n      div: \"West\",\n    },\n    {\n      city: \"Los Angeles\",\n      name: \"Rams\",\n      abr: \"LAR\",\n      conf: \"NFC\",\n      div: \"West\",\n    },\n    {\n      city: \"Tampa Bay\",\n      name: \"Buccaneers\",\n      abr: \"TB\",\n      conf: \"NFC\",\n      div: \"South\",\n    },\n    {\n      city: \"Tennessee\",\n      name: \"Titants\",\n      abr: \"TEN\",\n      conf: \"AFC\",\n      div: \"South\",\n    },\n    {\n      city: \"Washington\",\n      name: \"Redskins\",\n      abr: \"WAS\",\n      conf: \"NFC\",\n      div: \"East\",\n    },\n  ].find(team => team.abr === TeamID);\n};\n\nexport const isArrayEmpty = arrayArg => {\n  if (arrayArg && arrayArg.length) {\n    return false;\n  }\n  return true;\n};\n\nexport const isObjectEmpty = myObject => {\n  return !Object.keys(myObject).length;\n};\n\nexport const smallestToLargest = propArg => {\n  return (a, b) => {\n    if (a[propArg] > b[propArg]) {\n      return 1;\n    }\n    if (b[propArg] > a[propArg]) {\n      return -1;\n    }\n    return 0;\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { espnLogo } from \"../../utils/helpers\";\n\nconst MegaMenuTeam = ({ Name, City, Key, route, handleChange }) => {\n  return (\n    <Link\n      onClick={() => handleChange()}\n      to={`/${route}/teams/${Key}`}\n      style={{ display: \"block\" }}>\n      <img src={espnLogo(Key, 24, route)} alt={`${Name} ${City} Logo`} />\n      <span>\n        <span className=\"team-city\">{City} </span>\n        {Name}\n      </span>\n    </Link>\n  );\n};\n\nMegaMenuTeam.propTypes = {\n  Name: PropTypes.string.isRequired,\n  City: PropTypes.string.isRequired,\n  Key: PropTypes.string.isRequired,\n  route: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default MegaMenuTeam;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { smallestToLargest } from \"../../utils/helpers\";\nimport MegaMenuTeam from \"./MegaMenuTeam\";\n\nconst MegaMenuDivision = ({\n  DivisionName,\n  handleChange,\n  NumberOfTeamsInRow,\n  route,\n  TeamsInDivision,\n}) => {\n  return (\n    <div\n      className={`sports-megamenu__teams--division sports-megamenu__teams--division--${NumberOfTeamsInRow}`}\n      key={DivisionName}>\n      <h6>{DivisionName}</h6>\n      <nav>\n        {TeamsInDivision.sort(smallestToLargest(\"City\")).map(team => {\n          const { TeamID } = team;\n          return (\n            <MegaMenuTeam\n              key={`${route} ${TeamID}`}\n              {...team}\n              route={route}\n              handleChange={handleChange}\n            />\n          );\n        })}\n      </nav>\n    </div>\n  );\n};\n\nMegaMenuDivision.propTypes = {\n  DivisionName: PropTypes.string.isRequired,\n  NumberOfTeamsInRow: PropTypes.number.isRequired,\n  route: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  TeamsInDivision: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MegaMenuDivision;\n","import React from \"react\";\nimport MegaMenuDivision from \"./MegaMenuDivision\";\n\nconst CreateTeamsMegaMenu = ({\n  teams,\n  route,\n  handleChange,\n  NumberOfTeamsInRow,\n}) => {\n  let cols = [];\n\n  return teams.reduce((rows, element, index) => {\n    const [DivisionName, TeamsInComponents] = element;\n    const { League: LeaugeName, Conference } = TeamsInComponents[0];\n\n    cols.push(\n      <MegaMenuDivision\n        key={DivisionName}\n        DivisionName={DivisionName}\n        handleChange={handleChange}\n        NumberOfTeamsInRow={NumberOfTeamsInRow}\n        route={route}\n        TeamsInDivision={TeamsInComponents}\n      />\n    );\n\n    if ((index + 1) % NumberOfTeamsInRow === 0) {\n      rows.push(\n        <div\n          className=\"row\"\n          key={LeaugeName || `${Conference} ${DivisionName}`}>\n          {cols}\n        </div>\n      );\n      cols = [];\n    }\n\n    return rows;\n  }, []);\n};\n\nexport default CreateTeamsMegaMenu;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\nimport CreateTeamsMegaMenu from \"./CreateTeamsMegaMenu\";\nimport { sortTeamsByDivion } from \"../../utils/helpers\";\n\nconst LeagueDropdown = ({\n  Title,\n  teams,\n  route,\n  NotMobile,\n  closeMobileMenu,\n}) => {\n  const node = useRef();\n  const [open, setOpen] = useState(false);\n  const allTeams = sortTeamsByDivion(teams);\n  const NumberOfTeamsInRow = allTeams.length / 2;\n\n  const handleClickOutside = e => {\n    if (node.current.contains(e.target)) {\n      // inside click\n      return;\n    }\n    // outside click\n    setOpen(false);\n  };\n\n  const handleChange = () => {\n    setOpen(false);\n    closeMobileMenu();\n  };\n\n  useEffect(() => {\n    if (open) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [open]);\n\n  return (\n    <li\n      ref={node}\n      onMouseEnter={() => NotMobile && setOpen(true)}\n      onMouseLeave={() => NotMobile && handleChange()}>\n      <NavLink\n        className={`sports-megamenu__button ${\n          open ? \"sports-megamenu__button--is-open\" : \"\"\n        }`}\n        to={`/${route}`}\n        onClick={() => handleChange()}>\n        {Title}\n      </NavLink>\n\n      {open && (\n        <div className=\"sports-megamenu\">\n          <ul className=\"sports-megamenu__nav\">\n            <li>\n              <NavLink exact to={`/${route}`} onClick={() => handleChange()}>\n                Home\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                exact\n                to={`/${route}/scores`}\n                onClick={() => handleChange()}>\n                Scores\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                exact\n                to={`/${route}/schedule`}\n                onClick={() => handleChange()}>\n                Schedule\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                exact\n                to={`/${route}/standings`}\n                onClick={() => handleChange()}>\n                Standings\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                exact\n                to={`/${route}/stats`}\n                onClick={() => handleChange()}>\n                Stats\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                exact\n                to={`/${route}/news`}\n                onClick={() => handleChange()}>\n                News\n              </NavLink>\n            </li>\n            <li>\n              <NavLink\n                exact\n                to={`/${route}/teams`}\n                onClick={() => handleChange()}>\n                Teams\n              </NavLink>\n            </li>\n          </ul>\n\n          <div\n            className={`sports-megamenu__teams sports-megamenu__teams--${NumberOfTeamsInRow}`}>\n            <CreateTeamsMegaMenu\n              teams={allTeams}\n              sport={route}\n              route={route}\n              handleChange={handleChange}\n              NumberOfTeamsInRow={NumberOfTeamsInRow}\n            />\n          </div>\n        </div>\n      )}\n    </li>\n  );\n};\n\nLeagueDropdown.propTypes = {\n  Title: PropTypes.string.isRequired,\n  teams: PropTypes.arrayOf(PropTypes.object).isRequired,\n  route: PropTypes.string.isRequired,\n  NotMobile: PropTypes.bool.isRequired,\n  closeMobileMenu: PropTypes.func.isRequired,\n};\n\nexport default LeagueDropdown;\n","import { useState, useEffect } from \"react\";\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n};\n\nconst useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n};\n\nexport default useWindowDimensions;\n","import React, { useState, useLayoutEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { SiteLogo } from \"../Icons\";\nimport LeagueDropdown from \"../MegaMenu/LeagueDropdown\";\nimport useWindowDimensions from \"../../utils/useWindowDimensions\";\n\nconst BuildSportsNav = ({ SportsArg, NotMobile, closeMobileMenu }) => {\n  return Object.entries(SportsArg).map(sport => {\n    const [name, teams] = sport;\n\n    return (\n      <LeagueDropdown\n        Title={name}\n        teams={teams}\n        route={name}\n        key={name}\n        NotMobile={NotMobile}\n        closeMobileMenu={closeMobileMenu}\n      />\n    );\n  });\n};\n\nconst NavbarPrimary = ({ sports }) => {\n  const [isHover, setIfHover] = useState(false);\n  const [isItemActive, checkIfItemIsActive] = useState(false);\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  const { width: windowWidth } = useWindowDimensions();\n\n  const closeMobileMenu = () => {\n    setMobileMenuOpen(false);\n  };\n\n  useLayoutEffect(() => {\n    let buttons;\n    return () => {\n      buttons = Array.from(\n        document.querySelectorAll(\".sports-megamenu__button\")\n      ).some(item => item.classList.contains(\"active\"));\n      !isItemActive && checkIfItemIsActive(buttons);\n    };\n  });\n\n  const NotMobile = windowWidth >= 1023;\n\n  return (\n    <section className=\"navbar-primary\">\n      <div className=\"global-nav-container\">\n        <button\n          className=\"hamburger\"\n          type=\"button\"\n          onClick={() => setMobileMenuOpen(!mobileMenuOpen)}>\n          <div className=\"hamburger__menu\">\n            <div\n              className={`hamburger__menu--bar ${\n                mobileMenuOpen ? \"animate\" : \"\"\n              }`}\n            />\n          </div>\n        </button>\n\n        <figure className=\"navbar-primary__logo\">\n          <Link to=\"/\">\n            <SiteLogo />\n          </Link>\n        </figure>\n\n        <nav\n          className={`navbar-primary__nav navbar-primary__drawer ${\n            mobileMenuOpen && !NotMobile\n              ? \"navbar-primary__nav--drawer-open\"\n              : \"\"\n          }`}>\n          <ul\n            className={\n              isHover && isItemActive && NotMobile\n                ? \"global-nav__is-hovering\"\n                : \"\"\n            }\n            onMouseEnter={() => isItemActive && NotMobile && setIfHover(true)}\n            onMouseLeave={() =>\n              isItemActive && NotMobile && setIfHover(!isHover)\n            }>\n            {/* Drawer Label */}\n            <li>\n              <span>Sports</span>\n            </li>\n            <BuildSportsNav\n              SportsArg={sports}\n              NotMobile={NotMobile}\n              closeMobileMenu={closeMobileMenu}\n            />\n          </ul>\n        </nav>\n      </div>\n    </section>\n  );\n};\n\nNavbarPrimary.propTypes = {\n  sports: PropTypes.shape({\n    MLB: PropTypes.arrayOf(PropTypes.object),\n    NBA: PropTypes.arrayOf(PropTypes.object),\n    NFL: PropTypes.arrayOf(PropTypes.object),\n  }),\n};\n\nNavbarPrimary.defaultProps = {\n  sports: {},\n};\n\nexport default NavbarPrimary;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst NavbarSecondary = ({ sport }) => {\n  return (\n    <nav className=\"navbar-secondary\">\n      <div className=\"global-nav-container\">\n        <ul>\n          <li className=\"navbar-secondary__logo\">\n            <Link to={`/${sport}`}>\n              <figure>\n                <img\n                  src={`https://a.espncdn.com/combiner/i?img=/i/teamlogos/leagues/500/${sport}.png?w=100&h=100&transparent=true`}\n                  alt={`${sport} logo`}\n                />\n              </figure>\n              <figcaption>{sport}</figcaption>\n            </Link>\n          </li>\n          <li>\n            <NavLink exact to={`/${sport}`}>\n              Home\n            </NavLink>\n          </li>\n          <li>\n            <NavLink exact to={`/${sport}/standings`}>\n              Standings\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nNavbarSecondary.propTypes = {\n  sport: PropTypes.string.isRequired,\n};\n\nexport default NavbarSecondary;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n\nconst NavbarTeam = ({ City, Name, WikipediaLogoUrl, sport, Key }) => {\n  return (\n    <nav className=\"navbar-secondary\">\n      <div className=\"clubhouse-header\">\n        <div className=\"clubhouse-header__container\">\n          <figure className=\"clubhouse-header__logo\">\n            <img src={WikipediaLogoUrl} alt=\"\" />\n          </figure>\n          <figcaption className=\"clubhouse-header__content\">\n            <h1 className=\"clubhouse-header__name\">\n              <span className=\"clubhouse-header__name--city\">{City}</span>\n              {Name}\n            </h1>\n            <div className=\"clubhouse-header__details\">\n              <button\n                className=\"btn clubhouse-header__details--btn\"\n                type=\"button\">\n                Follow\n              </button>\n              <ul className=\"clubhouse-header__details--record\">\n                <li>7-9</li>\n                <li>2nd in AFC East</li>\n              </ul>\n            </div>\n          </figcaption>\n        </div>\n      </div>\n\n      <div className=\"global-nav-container\">\n        <ul>\n          <li>\n            <NavLink exact to={`/${sport}/teams/${Key}`}>\n              Home\n            </NavLink>\n          </li>\n          <li>\n            <NavLink exact to={`/${sport}/teams/${Key}/schedule`}>\n              Schedule\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nNavbarTeam.propTypes = {\n  City: PropTypes.string.isRequired,\n  Key: PropTypes.string.isRequired,\n  Name: PropTypes.string.isRequired,\n  sport: PropTypes.string.isRequired,\n  WikipediaLogoUrl: PropTypes.string.isRequired,\n};\n\nexport default NavbarTeam;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport NavbarPrimary from \"./NavbarPrimary\";\nimport NavbarSecondary from \"./NavbarSecondary\";\nimport NavbarTeam from \"./NavbarTeam\";\n\nconst NavbarGlobal = ({ sports, sport, match }) => {\n  const LeaugeSportsTeam = sports[sport];\n\n  return (\n    <header className=\"global-header\">\n      <NavbarPrimary sports={sports} />\n      {sport && !match.params.pathParamSportTeam && (\n        <NavbarSecondary sport={sport} />\n      )}\n      {LeaugeSportsTeam && match.params.pathParamSportTeam && (\n        <NavbarTeam\n          sport={sport}\n          {...LeaugeSportsTeam.find(\n            team => team.Key === match.params.pathParamSportTeam\n          )}\n        />\n      )}\n    </header>\n  );\n};\n\nNavbarGlobal.propTypes = {\n  sports: PropTypes.shape({\n    MLB: PropTypes.arrayOf(PropTypes.object),\n    NBA: PropTypes.arrayOf(PropTypes.object),\n    NFL: PropTypes.arrayOf(PropTypes.object),\n  }),\n  sport: PropTypes.string,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      pathParamSportTeam: PropTypes.string,\n    }),\n  }),\n};\n\nNavbarGlobal.defaultProps = {\n  sports: {},\n  sport: null,\n  match: null,\n};\n\nexport default NavbarGlobal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport NavbarGlobal from \"../componets/Navbar\";\n\nconst SiteHome = ({ Teams }) => {\n  return (\n    <>\n      <NavbarGlobal sports={Teams} />\n      <h1>Site Home</h1>\n    </>\n  );\n};\n\nSiteHome.propTypes = {\n  Teams: PropTypes.shape({\n    MLB: PropTypes.arrayOf(PropTypes.object),\n    NBA: PropTypes.arrayOf(PropTypes.object),\n    NFL: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default SiteHome;\n","/* eslint-disable react/prop-types */\nimport React, { createContext, useReducer } from \"react\";\nimport { handleErrors } from \"../utils/helpers\";\n\nconst initialState = {\n  Teams: {},\n};\n\nexport const fetchTeams = Promise.all(\n  [\"MLB\", \"NBA\", \"NFL\"].map(sport => {\n    return fetch(`${process.env.PUBLIC_URL}/data/${sport}/teams.json`)\n      .then(handleErrors)\n      .then(value => value.json());\n  })\n).then(data => {\n  const [MLB, NBA, NFL] = data;\n  return { MLB, NBA, NFL };\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_TEAMS\":\n      return { ...state, Teams: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const StoreGlobal = createContext();\n\nexport const ProviderGlobal = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n  return <StoreGlobal.Provider value={value}>{children}</StoreGlobal.Provider>;\n};\n","import React, { createContext, useReducer } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst initialState = {\n  StandingsMLB: [],\n  sport: \"MLB\",\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_MLB_STANDINGS\":\n      return { ...state, StandingsMLB: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const StoreMLB = createContext();\n\nexport const ProviderMLB = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n  return <StoreMLB.Provider value={value}>{children}</StoreMLB.Provider>;\n};\n\nProviderMLB.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import React, { createContext, useReducer } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst initialState = {\n  StandingsNBA: [],\n  sport: \"NBA\",\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_NBA_STANDINGS\":\n      return { ...state, StandingsNBA: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const StoreNBA = createContext();\n\nexport const ProviderNBA = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n  return <StoreNBA.Provider value={value}>{children}</StoreNBA.Provider>;\n};\n\nProviderNBA.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import React, { createContext, useReducer } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst initialState = {\n  StandingsNFL: [],\n  sport: \"NFL\",\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_NFL_STANDINGS\":\n      return { ...state, StandingsNFL: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const StoreNFL = createContext();\n\nexport const ProviderNFL = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n  return <StoreNFL.Provider value={value}>{children}</StoreNFL.Provider>;\n};\n\nProviderNFL.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst StandingsTableHead = ({ division }) => {\n  return (\n    <thead>\n      <tr>\n        <th>{division}</th>\n        <th>W</th>\n        <th>L</th>\n        <th>PCT</th>\n        <th>GB</th>\n        <th className=\"standings__sec-stat\">Home</th>\n        <th className=\"standings__sec-stat\">Road</th>\n      </tr>\n    </thead>\n  );\n};\n\nStandingsTableHead.propTypes = {\n  division: PropTypes.string.isRequired,\n};\n\nexport default StandingsTableHead;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StandingsTableHead from \"./StandingsTableHead\";\n\nconst StandingsDivision = ({ division, divisionTeams }) => (\n  <table\n    className=\"table table--standings\"\n    style={{\n      margin: \"24px auto\",\n    }}>\n    <StandingsTableHead division={division} />\n    <tbody>{divisionTeams}</tbody>\n  </table>\n);\n\nStandingsDivision.propTypes = {\n  division: PropTypes.string.isRequired,\n  divisionTeams: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default StandingsDivision;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { espnLogo, NflTeamDecoders } from \"../../utils/helpers\";\n\nconst TableTeamCellWrap = styled.td`\n  a {\n    color: inherit;\n\n    &:hover {\n      text-decoration: underline;\n    }\n\n    > * {\n      vertical-align: middle;\n    }\n\n    img {\n      height: 24px;\n      width: 24px;\n      margin-right: 6px;\n    }\n\n    .standings__team {\n      &--arbv,\n      &--city,\n      &--full {\n        display: inline;\n      }\n\n      &--arbv {\n        @media (min-width: 400px) {\n          display: none;\n        }\n      }\n\n      &--full {\n        @media (max-width: 399px) {\n          display: none;\n        }\n      }\n\n      &--city {\n        @media (max-width: 767px) {\n          display: none;\n        }\n      }\n    }\n  }\n`;\n\nconst TableTeamCell = ({ Key: TeamAbrv, City, Name, hideCity, sport }) => {\n  let TeamCity = City;\n  let TeamName = Name;\n\n  if (sport === \"NFL\") {\n    const { name, city } = NflTeamDecoders(TeamAbrv);\n    TeamCity = city;\n    TeamName = name;\n  }\n\n  return (\n    <TableTeamCellWrap className=\"standings__team\">\n      <Link to={`/teams/${TeamAbrv}`}>\n        <img\n          src={espnLogo(`${TeamAbrv}`, 36, sport)}\n          alt={`${TeamCity} ${TeamName} Logo`}\n        />\n        {TeamAbrv && <abbr className=\"standings__team--arbv\">{TeamAbrv}</abbr>}\n        {TeamCity && !hideCity && (\n          <figcaption className=\"standings__team--city\">{TeamCity} </figcaption>\n        )}\n        {TeamName && (\n          <figcaption className=\"standings__team--full\">{TeamName}</figcaption>\n        )}\n      </Link>\n    </TableTeamCellWrap>\n  );\n};\n\nTableTeamCell.propTypes = {\n  Key: PropTypes.string.isRequired,\n  City: PropTypes.string,\n  Name: PropTypes.string,\n  hideCity: PropTypes.bool,\n  sport: PropTypes.string,\n};\n\nTableTeamCell.defaultProps = {\n  City: null,\n  Name: null,\n  hideCity: false,\n  sport: \"MLB\",\n};\n\nexport default TableTeamCell;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TableWinsLossesCell = ({ Wins, Losses }) => {\n  return <td className=\"standings__sec-stat\">{`${Wins} - ${Losses}`}</td>;\n};\n\nTableWinsLossesCell.propTypes = {\n  Wins: PropTypes.number,\n  Losses: PropTypes.number,\n};\n\nTableWinsLossesCell.defaultProps = {\n  Wins: 0,\n  Losses: 0,\n};\n\nexport default TableWinsLossesCell;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TableTeamCell, TableWinsLossesCell } from \"../TableParts\";\n\nconst StandingsSingleTeam = ({\n  City,\n  Wins,\n  Losses,\n  GamesBehind,\n  HomeWins,\n  HomeLosses,\n  AwayWins,\n  AwayLosses,\n  TeamID,\n  Name,\n  Key,\n  Team,\n  sport,\n}) => {\n  return (\n    <tr key={TeamID}>\n      <TableTeamCell Key={Key || Team} City={City} Name={Name} sport={sport} />\n      <td>{Wins}</td>\n      <td>{Losses}</td>\n      <td>\n        {(Number(`${Wins}`) / (Number(`${Wins}`) + Number(`${Losses}`)))\n          .toFixed(3)\n          .replace(/^0+/, \"\")}\n      </td>\n      <td>{GamesBehind || \"-\"}</td>\n      <TableWinsLossesCell Wins={HomeWins} Losses={HomeLosses} />\n      <TableWinsLossesCell Wins={AwayWins} Losses={AwayLosses} />\n    </tr>\n  );\n};\n\nStandingsSingleTeam.propTypes = {\n  AwayLosses: PropTypes.number,\n  AwayWins: PropTypes.number,\n  City: PropTypes.string,\n  GamesBehind: PropTypes.number,\n  HomeLosses: PropTypes.number,\n  HomeWins: PropTypes.number,\n  Key: PropTypes.string,\n  Losses: PropTypes.number,\n  Name: PropTypes.string,\n  sport: PropTypes.string,\n  Team: PropTypes.string,\n  TeamID: PropTypes.number,\n  Wins: PropTypes.number,\n};\n\nStandingsSingleTeam.defaultProps = {\n  AwayLosses: null,\n  AwayWins: null,\n  City: null,\n  GamesBehind: null,\n  HomeLosses: null,\n  HomeWins: null,\n  Key: null,\n  Losses: null,\n  Name: null,\n  sport: \"MLB\",\n  Team: null,\n  TeamID: null,\n  Wins: null,\n};\n\nexport default StandingsSingleTeam;\n","import React from \"react\";\nimport { sortTeamsByDivion } from \"../../utils/helpers\";\nimport StandingsDivision from \"./DivisionComponent\";\nimport StandingsSingleTeam from \"./SingleTeamComponent\";\n\nconst StandingsTable = ({ teamStandings, sport }) => {\n  return sortTeamsByDivion(teamStandings).reduce(\n    (standingsComponent, divisionComponent) => {\n      const [divisionName, divisionTeamsComponents] = divisionComponent;\n      standingsComponent.push(\n        <StandingsDivision\n          className=\"table\"\n          key={divisionName}\n          division={divisionName}\n          divisionTeams={divisionTeamsComponents.map(team => {\n            const { Key, Team } = team;\n            return (\n              <StandingsSingleTeam key={Key || Team} {...team} sport={sport} />\n            );\n          })}\n        />\n      );\n      return standingsComponent;\n    },\n    []\n  );\n};\n\nStandingsTable.propTypes = {};\n\nexport default StandingsTable;\n","import React from \"react\";\nimport StandingsTable from \"../../componets/Standings/StandingsTable\";\n\nconst Standings = ({ teamStandings, sport }) => {\n  return (\n    <div>\n      <h1>{sport} Standings</h1>\n      <StandingsTable {...{ teamStandings, sport }} />\n    </div>\n  );\n};\n\nexport default Standings;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Home = ({ sport }) => {\n  return (\n    <div>\n      <h1>{sport && sport} Home</h1>\n    </div>\n  );\n};\n\nHome.propTypes = {\n  sport: PropTypes.string,\n};\n\nHome.defaultProps = {\n  sport: null,\n};\n\nexport default Home;\n","import React, { useContext, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\nimport { StoreMLB } from \"../stores\";\nimport Standings from \"../pages/Shared/Standings\";\nimport Home from \"../pages/Shared/Home\";\nimport { isArrayEmpty } from \"../utils/helpers\";\n\nconst RoutesMLB = ({ match, sport }) => {\n  const { state, dispatch } = useContext(StoreMLB);\n\n  const fetchDataAction = () => {\n    fetch(`${process.env.PUBLIC_URL}/data/${sport}/standings-2019.json`)\n      .then(res => res.json())\n      .then(data =>\n        dispatch({\n          type: `FETCH_${sport}_STANDINGS`,\n          payload: data,\n        })\n      );\n  };\n\n  useEffect(() => {\n    isArrayEmpty(state[`Standings${sport}`]) && fetchDataAction();\n  });\n\n  return (\n    <>\n      <Route path={match.url} exact render={() => <Home {...state} />} />\n      <Route\n        path={`${match.url}/standings`}\n        exact\n        render={() => (\n          <Standings teamStandings={state[`Standings${sport}`]} {...state} />\n        )}\n      />\n    </>\n  );\n};\n\nRoutesMLB.propTypes = {\n  sport: PropTypes.string.isRequired,\n  match: PropTypes.shape({\n    url: PropTypes.string,\n  }).isRequired,\n};\n\nexport default RoutesMLB;\n","import React, { useContext, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\nimport { StoreNBA } from \"../stores\";\nimport Standings from \"../pages/Shared/Standings\";\nimport Home from \"../pages/Shared/Home\";\nimport { isArrayEmpty } from \"../utils/helpers\";\n\nconst RoutesNBA = ({ match, sport }) => {\n  const { state, dispatch } = useContext(StoreNBA);\n\n  const fetchDataAction = () => {\n    fetch(`${process.env.PUBLIC_URL}/data/${sport}/standings-2019.json`)\n      .then(res => res.json())\n      .then(data =>\n        dispatch({\n          type: `FETCH_${sport}_STANDINGS`,\n          payload: data,\n        })\n      );\n  };\n\n  useEffect(() => {\n    isArrayEmpty(state[`Standings${sport}`]) && fetchDataAction();\n  });\n\n  return (\n    <>\n      <Route path={match.url} exact render={() => <Home {...state} />} />\n      <Route\n        path={`${match.url}/standings`}\n        exact\n        render={() => (\n          <Standings teamStandings={state[`Standings${sport}`]} {...state} />\n        )}\n      />\n    </>\n  );\n};\n\nRoutesNBA.propTypes = {\n  sport: PropTypes.string.isRequired,\n  match: PropTypes.shape({\n    url: PropTypes.string,\n  }).isRequired,\n};\n\nexport default RoutesNBA;\n","import React, { useContext, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\nimport { StoreNFL } from \"../stores\";\nimport Standings from \"../pages/Shared/Standings\";\nimport Home from \"../pages/Shared/Home\";\nimport { isArrayEmpty } from \"../utils/helpers\";\n\nconst RoutesNFL = ({ match, sport }) => {\n  const { state, dispatch } = useContext(StoreNFL);\n\n  const fetchDataAction = () => {\n    fetch(`${process.env.PUBLIC_URL}/data/${sport}/standings-2019.json`)\n      .then(res => res.json())\n      .then(data =>\n        dispatch({\n          type: `FETCH_${sport}_STANDINGS`,\n          payload: data,\n        })\n      );\n  };\n\n  useEffect(() => {\n    isArrayEmpty(state[`Standings${sport}`]) && fetchDataAction();\n  });\n\n  return (\n    <>\n      <Route path={match.url} exact render={() => <Home {...state} />} />\n      <Route\n        path={`${match.url}/standings`}\n        exact\n        render={() => (\n          <Standings teamStandings={state[`Standings${sport}`]} {...state} />\n        )}\n      />\n    </>\n  );\n};\n\nRoutesNFL.propTypes = {\n  sport: PropTypes.string.isRequired,\n  match: PropTypes.shape({\n    url: PropTypes.string,\n  }).isRequired,\n};\n\nexport default RoutesNFL;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\nimport NavbarGlobal from \"../componets/Navbar\";\n\nconst RoutesSportTeam = ({ Teams }) => {\n  return (\n    <Route\n      path=\"/:id/teams/:pathParamSportTeam\"\n      render={props => {\n        // eslint-disable-next-line react/prop-types\n        const { match } = props;\n        const { id, pathParamSportTeam } = match.params;\n        return (\n          <>\n            <NavbarGlobal sports={Teams} sport={id} {...props} />\n            <Route\n              exact\n              path=\"/:id/teams/:pathParamSportTeam\"\n              render={() => (\n                <h1 team={pathParamSportTeam}>Teams Home: Fuck Yeah!</h1>\n              )}\n            />\n            <Route\n              exact\n              path=\"/:id/teams/:pathParamSportTeam/schedule\"\n              render={() => (\n                <h1 team={pathParamSportTeam}>Schedule: Fuck Yeah!</h1>\n              )}\n            />\n          </>\n        );\n      }}\n    />\n  );\n};\n\nRoutesSportTeam.propTypes = {\n  Teams: PropTypes.shape({\n    MLB: PropTypes.arrayOf(PropTypes.object),\n    NBA: PropTypes.arrayOf(PropTypes.object),\n    NFL: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default RoutesSportTeam;\n","import React, { useContext, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport NavbarGlobal from \"./componets/Navbar\";\nimport { isObjectEmpty } from \"./utils/helpers\";\n\n// Pages\nimport SiteHome from \"./pages/SiteHome\";\n\n// Routes - Sport\nimport { RoutesMLB, RoutesNBA, RoutesNFL, RoutesSportTeam } from \"./routes\";\n\n// Stores\nimport { ProviderMLB, ProviderNBA, ProviderNFL, StoreGlobal } from \"./stores\";\n\nimport { fetchTeams } from \"./stores/Global\";\n\nconst App = () => {\n  const { state, dispatch } = useContext(StoreGlobal);\n\n  const getTeamsData = () => {\n    return fetchTeams.then(data =>\n      dispatch({\n        type: \"FETCH_TEAMS\",\n        payload: data,\n      })\n    );\n  };\n\n  useEffect(() => {\n    isObjectEmpty(state.Teams) && getTeamsData();\n  });\n\n  const { MLB, NBA, NFL } = state.Teams;\n\n  return (\n    <Router>\n      <>\n        <Route path=\"/\" exact render={() => <SiteHome {...state} />} />\n\n        <Route\n          exact\n          path=\"/:id/:pathParam1?\"\n          render={props => {\n            // eslint-disable-next-line react/prop-types\n            const { match } = props;\n            const { id } = match.params;\n            return <NavbarGlobal sports={state.Teams} sport={id} {...props} />;\n          }}\n        />\n\n        {/* Sport Teams Routes */}\n        <RoutesSportTeam Teams={state.Teams} />\n\n        <Route\n          path=\"/MLB\"\n          render={props => {\n            return (\n              <ProviderMLB>\n                <RoutesMLB {...props} sport=\"MLB\" teams={MLB} />\n              </ProviderMLB>\n            );\n          }}\n        />\n\n        <Route\n          path=\"/NBA\"\n          render={props => (\n            <ProviderNBA>\n              <RoutesNBA {...props} sport=\"NBA\" teams={NBA} />\n            </ProviderNBA>\n          )}\n        />\n\n        <Route\n          path=\"/NFL\"\n          render={props => (\n            <ProviderNFL>\n              <RoutesNFL {...props} sport=\"NFL\" teams={NFL} />\n            </ProviderNFL>\n          )}\n        />\n      </>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\nimport \"normalize.css\";\nimport \"./assets/scss/index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ProviderGlobal } from \"./stores/Global\";\n\nrender(\n  <ProviderGlobal>\n    <App />\n  </ProviderGlobal>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}